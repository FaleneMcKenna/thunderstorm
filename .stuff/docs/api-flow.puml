@startuml
participant "Withings\nDevice" as device #lightGray
participant "ElliQ" as eq
database "Firebase" as firebase
database "Firestore" as firestore

participant "Listener\nNotify" as notify
database "Withings" as withings
participant "OAuth2" as oauth2
actor "user" as user #purple
group authentication
    firestore -> oauth2: get Auth Token
    note left: TBD on how to link
    oauth2-> user: ask for confirmation
    user->oauth2: confirmation
    oauth2-> firestore: give AuthToken
    note left: by unit in project
    firestore->oauth2: send AuthToken to get AccessToken
    oauth2->firestore: give accessToken & RefreshToken
    note left: refresh token expires after 1 year
    firestore->firebase: write tokens \nto node
    loop refresh authorization
    hnote over firebase: wait
    firebase->oauth2: request new accessToken
    note left: the time before refresh is given in\nthe body of the AccessToken\n(should be 3 hours)

    oauth2->firestore: give new accessToken
    firestore->firebase: write tokens \nto node
    end
end
firestore->notify: Subscribes to get notifications\n when data is available.

user->device: use device
device->withings: sends data usage
notify<--withings: triggers \nNotify
notify->firestore: writes to update Node
firestore-->firestore: update Node change \ntriggers API calls

firestore->withings: POST request triggers, asks for new data
withings->firestore: replies with JSON
firestore-->firestore: writes JSON to node

group Plan Usage Level
    eq->firestore: checks for available data
    eq<-firestore: pulls data for plan
    hnote over eq: updated\nIRLang
    eq->user: issues plan to user
end

@enduml